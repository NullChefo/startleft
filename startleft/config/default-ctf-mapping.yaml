trustzones:
  - id:   b61d6911-338d-46a8-9f39-8dcd24abfe91
    name: Public Cloud

# The order of the components is important because parent components must be defined before child components
# TODO: 1- Order shoudn't matter because every object could appear inside other components
components:
  - id:     {$format: "{name}"}
    type:   CD-ACM
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?Type=='AWS::CertificateManager::Certificate']"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   cloudwatch
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?Type=='AWS::CloudWatch::Alarm']"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   dynamodb
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::DynamoDB::Table']"}
    $altsource:
      - $mappingType: {$root: "Resources|squash(@)[?Type=='AWS::EC2::VPCEndpoint']"}
        $mappingPath: {$path: "Properties.ServiceName"}
        $mappingLookups:
          - regex: ^(.*)dynamodb$
            name: DynamoDB from VPCEndpoint
            type: dynamodb
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   vpc
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::EC2::VPC']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   ec2
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::EC2::Instance']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   empty-component
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::EC2::Subnet']"}
    parent:      {$path: "Properties.VpcId.Ref"}
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   empty-component
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::EC2::VPCEndpoint']"}
    parent: {$findFirst:[ "Properties.SubnetIds[].Ref", "Properties.VpcId.Ref"]}
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   empty-component
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::EC2::InternetGateway']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   elastic-container-service
    name:   {$path: "_key"}
    $source: {
      $children: {$path: "Properties.TaskDefinition.Ref"},
      $root: "Resources|squash(@)[?Type=='AWS::ECS::Service']"
    }
    parent:  {$path: "Properties.NetworkConfiguration.AwsvpcConfiguration.Subnets[]|map(&values(@), @)[]"}
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   docker-container
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::ECS::TaskDefinition']"}
    parent:  {$parent: {$path: "_key"}}
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   load-balancer
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::ElasticLoadBalancingV2::LoadBalancer']"}
    parent:  {$path: "Properties.Subnets[]|map(&values(@), @)[]|map(&re_sub('[:]', '-', @), @)"}
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   load-balancer
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::ElasticLoadBalancing::LoadBalancer']"}
    parent:  {$path: "Properties.Subnets[]|map(&values(@), @)[]|map(&re_sub('[:]', '-', @), @)"}
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   kms
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?Type=='AWS::KMS::Key']"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   aws-lambda-function
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::Lambda::Function']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   cloudwatch
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?Type=='AWS::Logs::LogGroup']"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }


  - id:     {$format: "{name}"}
    type:   rds
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::RDS::DBInstance']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }


  - id:     {$format: "{name}"}
    type:   route-53
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::Route53::HostedZone']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }


  - id:     {$format: "{name}"}
    type:   s3
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::S3::Bucket']"}
    $altsource:
      - $mappingType: {$root: "Resources|squash(@)[?Type=='AWS::EC2::VPCEndpoint']"}
        $mappingPath: {$path: "Properties.ServiceName"}
        $mappingLookups:
          - regex: ^(.*)s3$
            name: S3 from VPCEndpoint
            type: s3
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }


  - id:     {$format: "{name}"}
    type:   CD-SECRETS-MANAGER
    name:   {$path: "_key"}
    $source: {$singleton: { $root: "Resources|squash(@)[?Type=='AWS::SecretsManager::Secret']"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   sqs-simple-queue-service
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::SQS::Queue']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   CD-SYSTEMS-MANAGER
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::SSM')]"}}
    $altsource:
      - $mappingType: {$root: "Resources|squash(@)[?Type=='AWS::EC2::VPCEndpoint']"}
        $mappingPath: {$path: "Properties.ServiceName"}
        $mappingLookups:
          - regex: ^(.*)ssm$
            name: Systems Manager from VPCEndpoint
            type: CD-SYSTEMS-MANAGER
          - regex: ^(.*)ssmmessages$
            name: Systems Manager from VPCEndpoint
            type: CD-SYSTEMS-MANAGER
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   empty-component
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::Synthetics')]"}
    parent:  {$path: "Properties.VPCConfig.SubnetIds[]|map(&values(@), @)[]"}
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   api-gateway
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::ApiGateway')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   athena
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::Athena')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   CD-MQ
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::AmazonMQ::Broker']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   cf-cloudfront
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::CloudFront')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   cloudtrail
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::CloudTrail')]"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   cognito
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::Cognito::UserPool']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   cognito
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::Cognito::IdentityPool']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   CD-CONFIG
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::Config')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   elastic-container-registry
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::ECR')]"}}
    $altsource:
      - $mappingType: {$root: "Resources|squash(@)[?Type=='AWS::EC2::VPCEndpoint']"}
        $mappingPath: {$path: "Properties.ServiceName"}
        $mappingLookups:
          - regex: ^(.*)ecr.dkr$
            name: ECR from VPCEndpoint
            type: elastic-container-registry
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   elastic-container-kubernetes
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::EKS::Cluster')]"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   elasticache
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::ElastiCache')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   CD-GUARDDUTY
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::GuardDuty')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   CD-INSPECTOR
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::Inspector')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   CD-MACIE
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::Macie')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   CD-AWS-NETWORK-FIREWALL
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::NetworkFirewall::Firewall']"}
    parent:  {$path: "Properties.VpcId.Ref"}
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   redshift
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?Type=='AWS::Redshift::Cluster']"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   CD-SES
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::SES')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   sns
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::SNS')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   step-functions
    name:   {$path: "_key"}
    $source: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::StepFunctions::StateMachine')]"}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }


  - id:     {$format: "{name}"}
    type:   CD-WAF
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::WAF')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   kinesis-data-analytics
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::KinesisAnalytics')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   kinesis-data-analytics
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::Kinesis::')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }

  - id:     {$format: "{name}"}
    type:   kinesis-data-firehose
    name:   {$path: "_key"}
    $source: {$singleton: {$root: "Resources|squash(@)[?starts_with(Type, 'AWS::KinesisFirehose')]"}}
    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
    tags:
      - { $path: "Type" }


  # Default catchall
#  - id:          { $format: "{name}"}
#    $source:
#      $catchall: {$root: "Resources|squash(@)"}
#    type:        {$path: "Type"}
#    name:        {$path: "_key"}
#    parent:  b61d6911-338d-46a8-9f39-8dcd24abfe91
#    tags:
#      - { $path: "Type" }

dataflows: []